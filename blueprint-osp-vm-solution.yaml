tosca_definitions_version: cloudify_dsl_1_3

imports:
  - https://cloudify.co/spec/cloudify/6.0.0/types.yaml
  - plugin:cloudify-openstack-plugin?version= >=3.0.0

inputs:

  user_domain_name:
    default: default

  project_domain_name:
    default: default


dsl_definitions:

  openstack_config: &openstack_config
    username: { get_secret: keystone_username }
    password: { get_secret: keystone_password }
    tenant_name: { get_secret: keystone_tenant_name }
    auth_url: { get_secret: keystone_url }
    region_name: { get_secret: keystone_region }
    user_domain_name: { get_input: user_domain_name }
    project_domain_name: { get_input: project_domain_name }

node_templates:

  FrontEnd:
    type:  cloudify.nodes.openstack.Server
    properties:
      client_config: *openstack_config
      image: {  get_secret: centos_core_image }
      flavor:  { get_secret: small_image_flavor }
      agent_config:
        install_method: none
    relationships:
      - target: frontend_host_port
        type: cloudify.relationships.openstack.server_connected_to_port

  BackEnd:
    type:  cloudify.nodes.openstack.Server
    properties:
      client_config: *openstack_config
      image: {  get_secret: centos_core_image }
      flavor:  { get_secret: small_image_flavor }
      agent_config:
        install_method: none
    relationships:
      - target: backend_host_port
        type: cloudify.relationships.openstack.server_connected_to_port

  frontend_host_port:
    type: cloudify.nodes.openstack.Port
    properties:
      client_config: *openstack_config
    relationships:
      - type: cloudify.relationships.contained_in
        target: private_network
      - type: cloudify.relationships.depends_on
        target: private_subnet

  backend_host_port:
    type: cloudify.nodes.openstack.Port
    properties:
      client_config: *openstack_config
    relationships:
      - type: cloudify.relationships.contained_in
        target: private_network
      - type: cloudify.relationships.depends_on
        target: private_subnet

  private_subnet:
    type: cloudify.nodes.openstack.Subnet
    properties:
      client_config: *openstack_config
      use_external_resource: true
      resource_config:
        id: { get_secret: private_subnet_name }
    relationships:
      - type: cloudify.relationships.contained_in
        target: private_network

  private_network:
    type: cloudify.nodes.openstack.Network
    properties:
      client_config: *openstack_config
      use_external_resource: true
      resource_config:
        id: { get_secret: private_network_name }
